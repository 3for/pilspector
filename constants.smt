(define-fun-rec pow ((b Int) (e Int)) Int (ite (= e 0) 1 (* b (pow b (- e 1)))))

(define-fun Arith_BYTE2_BIT19_0 ((r Int) (v Int)) Bool (and (= r v) (>= v 0) (<= v 589823)))
(define-fun Arith_CLK_n ((n Int) (r Int) (v Int)) Bool (= v (ite (= (mod r 32) n) 1 0)))
(define-fun Arith_CLK_0 ((r Int) (v Int)) Bool (Arith_CLK_n 0 r v))
(define-fun Arith_CLK_1 ((r Int) (v Int)) Bool (Arith_CLK_n 1 r v))
(define-fun Arith_CLK_2 ((r Int) (v Int)) Bool (Arith_CLK_n 2 r v))
(define-fun Arith_CLK_3 ((r Int) (v Int)) Bool (Arith_CLK_n 3 r v))
(define-fun Arith_CLK_4 ((r Int) (v Int)) Bool (Arith_CLK_n 4 r v))
(define-fun Arith_CLK_5 ((r Int) (v Int)) Bool (Arith_CLK_n 5 r v))
(define-fun Arith_CLK_6 ((r Int) (v Int)) Bool (Arith_CLK_n 6 r v))
(define-fun Arith_CLK_7 ((r Int) (v Int)) Bool (Arith_CLK_n 7 r v))
(define-fun Arith_CLK_8 ((r Int) (v Int)) Bool (Arith_CLK_n 8 r v))
(define-fun Arith_CLK_9 ((r Int) (v Int)) Bool (Arith_CLK_n 9 r v))
(define-fun Arith_CLK_10 ((r Int) (v Int)) Bool (Arith_CLK_n 10 r v))
(define-fun Arith_CLK_11 ((r Int) (v Int)) Bool (Arith_CLK_n 11 r v))
(define-fun Arith_CLK_12 ((r Int) (v Int)) Bool (Arith_CLK_n 12 r v))
(define-fun Arith_CLK_13 ((r Int) (v Int)) Bool (Arith_CLK_n 13 r v))
(define-fun Arith_CLK_14 ((r Int) (v Int)) Bool (Arith_CLK_n 14 r v))
(define-fun Arith_CLK_15 ((r Int) (v Int)) Bool (Arith_CLK_n 15 r v))
(define-fun Arith_CLK_16 ((r Int) (v Int)) Bool (Arith_CLK_n 16 r v))
(define-fun Arith_CLK_17 ((r Int) (v Int)) Bool (Arith_CLK_n 17 r v))
(define-fun Arith_CLK_18 ((r Int) (v Int)) Bool (Arith_CLK_n 18 r v))
(define-fun Arith_CLK_19 ((r Int) (v Int)) Bool (Arith_CLK_n 19 r v))
(define-fun Arith_CLK_20 ((r Int) (v Int)) Bool (Arith_CLK_n 20 r v))
(define-fun Arith_CLK_21 ((r Int) (v Int)) Bool (Arith_CLK_n 21 r v))
(define-fun Arith_CLK_22 ((r Int) (v Int)) Bool (Arith_CLK_n 22 r v))
(define-fun Arith_CLK_23 ((r Int) (v Int)) Bool (Arith_CLK_n 23 r v))
(define-fun Arith_CLK_24 ((r Int) (v Int)) Bool (Arith_CLK_n 24 r v))
(define-fun Arith_CLK_25 ((r Int) (v Int)) Bool (Arith_CLK_n 25 r v))
(define-fun Arith_CLK_26 ((r Int) (v Int)) Bool (Arith_CLK_n 26 r v))
(define-fun Arith_CLK_27 ((r Int) (v Int)) Bool (Arith_CLK_n 27 r v))
(define-fun Arith_CLK_28 ((r Int) (v Int)) Bool (Arith_CLK_n 28 r v))
(define-fun Arith_CLK_29 ((r Int) (v Int)) Bool (Arith_CLK_n 29 r v))
(define-fun Arith_CLK_30 ((r Int) (v Int)) Bool (Arith_CLK_n 30 r v))
(define-fun Arith_CLK_31 ((r Int) (v Int)) Bool (Arith_CLK_n 31 r v))
(define-fun Arith_GL_SIGNED_18BITS_0 ((r Int) (v Int)) Bool (and (>= v -262144) (<= v 262144) (exists ((k Int)) (= v (+ -262144 (+ r (* k 524289)))))))
(define-fun Arith_GL_SIGNED_4BITS_C0_0 ((r Int) (v Int)) Bool (and (>= v -16) (<= v 16) (exists ((k Int)) (= v (+ -16 (+ r (* k 33)))))))
(define-fun Arith_GL_SIGNED_4BITS_C1_0 ((r Int) (v Int)) Bool (and (>= v -16) (<= v 16) (exists ((k Int)) (= v (+ -16 (+ r (* k 33)))))))
(define-fun Arith_GL_SIGNED_4BITS_C2_0 ((r Int) (v Int)) Bool (and (>= v -16) (<= v 16) (exists ((k Int)) (= v (+ -16 (+ r (* k 33)))))))
(define-fun Arith_SEL_BYTE2_BIT19_0 ((r Int) (v Int)) Bool (ite (<= r 65535) (= v 0) (= v 1)))
(define-fun Binary_FACTOR_n ((n Int) (r Int) (v Int)) Bool (= v (ite (< (mod (- r (* n 4)) 32) 4) (pow 256 (mod r 4)) 0)))
(define-fun Binary_FACTOR_0 ((r Int) (v Int)) Bool (Binary_FACTOR_n 0 r v))
(define-fun Binary_FACTOR_1 ((r Int) (v Int)) Bool (Binary_FACTOR_n 1 r v))
(define-fun Binary_FACTOR_2 ((r Int) (v Int)) Bool (Binary_FACTOR_n 2 r v))
(define-fun Binary_FACTOR_3 ((r Int) (v Int)) Bool (Binary_FACTOR_n 3 r v))
(define-fun Binary_FACTOR_4 ((r Int) (v Int)) Bool (Binary_FACTOR_n 4 r v))
(define-fun Binary_FACTOR_5 ((r Int) (v Int)) Bool (Binary_FACTOR_n 5 r v))
(define-fun Binary_FACTOR_6 ((r Int) (v Int)) Bool (Binary_FACTOR_n 6 r v))
(define-fun Binary_FACTOR_7 ((r Int) (v Int)) Bool (Binary_FACTOR_n 7 r v))
(define-fun Binary_P_A_0 ((r Int) (v Int)) Bool (= v (mod (div r 256) 256)))
(define-fun Binary_P_B_0 ((r Int) (v Int)) Bool (= v (mod r 256)))
; Binary constants are too hard. Since it is out of scope, I'll skip the rest for now.
(define-fun Byte4_SET_0 ((r Int) (v Int)) Bool (= v (mod (+ r 1) 2)))
(define-fun Global_BYTE_0 ((r Int) (v Int)) Bool (and (= r v) (>= v 0) (<= v 255)))
(define-fun Global_BYTE2_0 ((r Int) (v Int)) Bool (and (= r v) (>= v 0) (<= v 65535)))
(define-fun Global_L1_0 ((r Int) (v Int)) Bool (= v (ite (= r 0) 1 0)))
; Keccak is too hard, skipping.
(define-fun Main_STEP_0 ((r Int) (v Int)) Bool (= r v))
(define-fun Mem_INCS_0 ((r Int) (v Int)) Bool (= (+ r 1) v ))
(define-fun Mem_ISNOTLAST_0 ((r Int) (v Int)) Bool (= v (ite (= r 2097151) 0 1)))

(declare-const x Int)
(assert (Mem_ISNOTLAST_0 56456 x))
(check-sat)
(get-model)
